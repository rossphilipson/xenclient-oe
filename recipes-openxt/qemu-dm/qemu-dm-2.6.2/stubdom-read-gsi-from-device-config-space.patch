Index: qemu-2.6.2/hw/xen/xen_pt.c
===================================================================
--- qemu-2.6.2.orig/hw/xen/xen_pt.c
+++ qemu-2.6.2/hw/xen/xen_pt.c
@@ -846,7 +846,27 @@ static void xen_pt_realize(PCIDevice *d,
         goto out;
     }
 
+#ifdef CONFIG_STUBDOM
+    /*
+     * In stubdoms, the kernel and Xen have already setup a GSI->PIRQ mapping
+     * for PCI devices when the PCI bus is initialized. A side effect of this
+     * is that the irq field in the pci_dev instance is updated with the PIRQ
+     * value (see xen_pcifront_enable_irq). This is not a correct value to
+     * call xc_physdev_map_pirq with. The config space of the pcifront device
+     * still contains the valid GSI value so it can be gotten from there.
+     */
+    rc = xen_host_pci_get_byte(&s->real_device, PCI_INTERRUPT_LINE, &machine_irq);
+    if (rc) {
+        XEN_PT_ERR(d, "Read PCI_INTERRUPT_LINE value failed.\n");
+        return -1;
+    }
+
+    xen_pt_log(d, "PCI stubdom - read GSI from config: %d\n", machine_irq);
+#else
     machine_irq = s->real_device.irq;
+    xen_pt_log(d, "PCI - use GSI from pci_dev: %d\n", machine_irq);
+#endif
+
     rc = xc_physdev_map_pirq(xen_xc, xen_domid, machine_irq, &pirq);
     if (rc < 0) {
         error_setg_errno(errp, errno, "Mapping machine irq %u to"
