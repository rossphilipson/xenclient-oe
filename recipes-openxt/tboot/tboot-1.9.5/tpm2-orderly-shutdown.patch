--- a/tboot/common/tpm_20.c	2017-04-10 11:24:52.569562301 -0400
+++ b/tboot/common/tpm_20.c	2017-04-19 17:12:28.282886060 -0400
@@ -2180,6 +2180,21 @@
     return true;
 }
 
+static uint32_t tpm20_shutdown(struct tpm_if *ti, uint32_t locality)
+{
+    u32 ret;
+
+    if ( ti == NULL )
+        return false;
+
+    ret = _tpm20_shutdown(locality, TPM_SU_CLEAR);
+    if ( ret != TPM_RC_SUCCESS ) {
+        printk(TBOOT_WARN"TPM: Shutdown, return value = %08X\n", ret);
+        ti->error = ret;
+    }
+
+    return ret;
+}
 static uint32_t tpm20_save_state(struct tpm_if *ti, uint32_t locality)
 {
     u32 ret;
@@ -2392,6 +2410,7 @@
     .verify_creation = tpm20_verify_creation,
     .get_random = tpm20_get_random,
     .save_state = tpm20_save_state,
+    .shutdown = tpm20_shutdown,
     .cap_pcrs = tpm20_cap_pcrs,
 };
 
--- a/tboot/include/tpm.h	2017-04-11 13:18:47.430538228 -0400
+++ b/tboot/include/tpm.h	2017-04-19 16:18:48.986864054 -0400
@@ -474,6 +474,7 @@
     bool (*get_random)(struct tpm_if *ti, u32 locality, u8 *random_data, u32 *data_size);
 
     uint32_t (*save_state)(struct tpm_if *ti, u32 locality);
+    uint32_t (*shutdown)(struct tpm_if *ti, u32 locality);
 
     bool (*cap_pcrs)(struct tpm_if *ti, u32 locality, int pcr);
     bool (*check)(void);
--- a/tboot/common/tboot.c	2017-04-11 13:14:12.780420702 -0400
+++ b/tboot/common/tboot.c	2017-04-20 09:22:12.224764581 -0400
@@ -607,8 +607,15 @@
         /* have TPM save static PCRs (in case VMM/kernel didn't) */
         /* per TCG spec, TPM can invalidate saved state if any other TPM
            operation is performed afterwards--so do this last */
-        if ( _tboot_shared.shutdown_type == TB_SHUTDOWN_S3 )
+        if ( _tboot_shared.shutdown_type == TB_SHUTDOWN_S3 ) {
             g_tpm->save_state(g_tpm, g_tpm->cur_loc);
+        } else if ( _tboot_shared.shutdown_type == TB_SHUTDOWN_REBOOT ||
+                   _tboot_shared.shutdown_type == TB_SHUTDOWN_HALT ||
+                   _tboot_shared.shutdown_type == TB_SHUTDOWN_S5) {
+           if(g_tpm->major == TPM20_VER_MAJOR){
+               g_tpm->shutdown(g_tpm, g_tpm->cur_loc);
+           }
+        }
 
         /* scrub any secrets by clearing their memory, then flush cache */
         /* we don't have any secrets to scrub, however */
